# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: storage.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rstorage.proto\x12\x07storage\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1cgoogle/api/annotations.proto\"\"\n\x04Pair\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t2\xa3\x01\n\x07Storage\x12G\n\x03put\x12\r.storage.Pair\x1a\x1c.google.protobuf.StringValue\"\x13\x82\xd3\xe4\x93\x02\r\"\x0b/v1/storage\x12O\n\x03get\x12\x1c.google.protobuf.StringValue\x1a\r.storage.Pair\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v1/storage/{value}b\x06proto3')



_PAIR = DESCRIPTOR.message_types_by_name['Pair']
Pair = _reflection.GeneratedProtocolMessageType('Pair', (_message.Message,), {
  'DESCRIPTOR' : _PAIR,
  '__module__' : 'storage_pb2'
  # @@protoc_insertion_point(class_scope:storage.Pair)
  })
_sym_db.RegisterMessage(Pair)

_STORAGE = DESCRIPTOR.services_by_name['Storage']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _STORAGE.methods_by_name['put']._options = None
  _STORAGE.methods_by_name['put']._serialized_options = b'\202\323\344\223\002\r\"\013/v1/storage'
  _STORAGE.methods_by_name['get']._options = None
  _STORAGE.methods_by_name['get']._serialized_options = b'\202\323\344\223\002\025\022\023/v1/storage/{value}'
  _PAIR._serialized_start=88
  _PAIR._serialized_end=122
  _STORAGE._serialized_start=125
  _STORAGE._serialized_end=288
# @@protoc_insertion_point(module_scope)
